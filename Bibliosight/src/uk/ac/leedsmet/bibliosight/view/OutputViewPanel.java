/*
 * Copyright (c) 2010, Leeds Metropolitan University
 *
 * This file is part of Bibliosight.
 *
 * Bibliosight is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * Bibliosight is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with Bibliosight. If not, see <http://www.gnu.org/licenses/>.
 *
 */

/*
 * OutputViewPanel.java
 *
 * Created on 16-Dec-2009, 09:46:10
 */

package uk.ac.leedsmet.bibliosight.view;

import java.awt.BorderLayout;
import java.beans.PropertyChangeEvent;
import javax.swing.JFrame;
import javax.swing.WindowConstants;
import uk.ac.leedsmet.bibliosight.controller.DefaultController;

/**
 * A view panel for displaying output from the Bibliosight client
 *
 * @author Mike Taylor
 */
public class OutputViewPanel extends AbstractViewPanel {
    private static final String NEW_LINE = System.getProperty("line.separator");

    // Controller used by the view
    private DefaultController controller;

    public static final Integer TAB_INDEX_LOG = 0;
    public static final Integer TAB_INDEX_RESULTS = 1;

    /** Creates new form OutputViewPanel */
    public OutputViewPanel(DefaultController controller) {
        this.controller = controller;

        initComponents();
    }

    /**
     * Sets the value of the log text area
     * @param log
     */
    public void setLogText(String log)
    {
        logTextArea.setText(log);
    }

    /**
     * Appends a string (on a new line) to the log text area
     * @param string
     */
    public void appendToLogText(String string)
    {
        if(logTextArea.getText() != null)
        {
            setLogText(logTextArea.getText() + NEW_LINE + string);
        }
        else
        {
            setLogText(string);
        }
    }

    /**
     * Selects the log tab
     */
    public void selectLogTab()
    {
        outputTabbedPane.setSelectedIndex(TAB_INDEX_LOG);
    }

    /**
     * Selects the results tab
     */
    public void selectResultsTab()
    {
        outputTabbedPane.setSelectedIndex(TAB_INDEX_RESULTS);
    }

    /**
     * Returns the text content of the results output text area
     * @return
     */
    public String getResultsOutputText()
    {
        return resultsOutputTextArea.getText();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        outputTabbedPane = new javax.swing.JTabbedPane();
        jScrollPane1 = new javax.swing.JScrollPane();
        logTextArea = new javax.swing.JTextArea();
        jScrollPane2 = new javax.swing.JScrollPane();
        resultsOutputTextArea = new javax.swing.JTextArea();

        logTextArea.setColumns(20);
        logTextArea.setRows(5);
        logTextArea.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                logTextAreaPropertyChange(evt);
            }
        });
        jScrollPane1.setViewportView(logTextArea);

        outputTabbedPane.addTab("Log", jScrollPane1);

        resultsOutputTextArea.setColumns(20);
        resultsOutputTextArea.setRows(5);
        jScrollPane2.setViewportView(resultsOutputTextArea);

        outputTabbedPane.addTab("Results XML", jScrollPane2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(outputTabbedPane, javax.swing.GroupLayout.DEFAULT_SIZE, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(outputTabbedPane, javax.swing.GroupLayout.DEFAULT_SIZE, 300, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void logTextAreaPropertyChange(java.beans.PropertyChangeEvent evt)//GEN-FIRST:event_logTextAreaPropertyChange
    {//GEN-HEADEREND:event_logTextAreaPropertyChange
        try {
            controller.changeLog(logTextArea.getText());
        } catch (Exception e) {
            //  Handle exception
        }
    }//GEN-LAST:event_logTextAreaPropertyChange

    /**
     * Updates the view with value changes from model properties
     * @param evt
     */
    @Override
    public void modelPropertyChange(PropertyChangeEvent evt)
    {
        if (evt.getPropertyName().equals(DefaultController.WS_LITE_SEARCH_LOG_PROPERTY))
        {
            String newStringValue = evt.getNewValue().toString();


            if (!logTextArea.getText().equals(newStringValue))
            {
                logTextArea.setText(newStringValue);
            }
        }
        else if (evt.getPropertyName().equals(DefaultController.WS_LITE_SEARCH_RESULT_OUTPUT_PROPERTY))
        {
            String newStringValue = evt.getNewValue().toString();


            if (!resultsOutputTextArea.getText().equals(newStringValue))
            {
                resultsOutputTextArea.setText(newStringValue);
            }
        }
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea logTextArea;
    private javax.swing.JTabbedPane outputTabbedPane;
    private javax.swing.JTextArea resultsOutputTextArea;
    // End of variables declaration//GEN-END:variables

    public static void main(String args[])
    {
        OutputViewPanel test = new OutputViewPanel(null);

        JFrame displayFrame = new JFrame("Display (View 1)");
        displayFrame.getContentPane().add(test, BorderLayout.CENTER);
        displayFrame.setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);
        displayFrame.pack();

        displayFrame.setVisible(true);
    }
}
